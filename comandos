CREATE TABLE nombre (
    atributo    tipo(tamaño),
    CONSTRAINT pk_tabla PRIMARY KEY(atributo/s),
    CONSTRAINT ck_tabla CHECK (lo_q_sea),
    CONSTRAINT fk_tabla_atributro FOREIGN KEY(atributo) REFERENCES otra_tabla(atributo)
);


--BORRAR TABLA              DROP TABLE nombre;
--VER TABLA                 DESC nombre;
--VER TODAS LAS TABLAS      SELECT table_name FROM USER_TABLES;     Poner eso literal
--LIMPIAL PANTALLA          cl scr
--BUSCAR UNA COLUMNA DE UNA TABLA Y SOLO UN ELEMENTO ESPECIFCO
--select product from fsdb.catalogue where product='Sereno';  
--SELECCIONAR LO DE ARRIBA PERO SIN REPETIDOS
--select distinct product from fsdb.catalogue where product='Sereno';  




--SUPUESTOS SEMANTICOS
--packagin de cantidad es un supuesto semantico implicito



--Clase 20/03/2024
/*
    para salir del modo multilinea usar -> /
    si hay error de compilacion y queremos verlos se pone -> Show errors trigger nombre_disparador;
    borrar disparador -> drop trigger ins_contracts;
    ver todas las vistas -> SELECT view_name FROM USER_views;

    para mostrar por pantalla los avisos de depuracion
    esto va dentro de consultas
    SET SERVEROUTPUT ON
    DBMS_OUTPUT.PUT_LINE('Pasa por aquí: '|| :new.phone);

    rais_application_error (num entre -20999 y -20000, "mensaje")
    en una vista solo hay instead of
 */


--ej pag 8 lab4
CREATE OR REPLACE TRIGGER CHK_clause_date
BEFORE INSERT OR UPDATE OF cl_date ON clauses_ALL
FOR EACH ROW
DECLARE 
    signdate DATE;
    baddate EXCEPTION;
BEGIN
    -- Consulta la fecha de firma del contrato asociado a la cláusula
    SELECT signature INTO signdate
    FROM contracts_ALL
    WHERE referenc = :NEW.referenc AND rownum=1; --truco del almendruco (); -- Asumiendo que hay una columna contract_id en clauses_ALL

    -- Si la fecha del contrato es posterior a la fecha de la cláusula, lanza una excepción
    IF :NEW.cl_date > signdate 
     THEN :NEW.cl_date := signdate;
    END IF;
    
END CHK_clause_date;
/

--con subbloque tratamos la excepcion (begin end)


--ej pag 9 lab4
CREATE OR REPLACE TRIGGER CHK_clause_date
BEFORE INSERT OR UPDATE OF cl_date ON clauses_ALL
FOR EACH ROW
DECLARE 
    signdate DATE;
    baddate EXCEPTION;
BEGIN
    -- Consulta la fecha de firma del contrato asociado a la cláusula
    SELECT signature INTO signdate
    FROM contracts_ALL
    WHERE referenc = :NEW.referenc AND rownum=1; --truco del almendruco (); -- Asumiendo que hay una columna contract_id en clauses_ALL

    -- Si la fecha del contrato es posterior a la fecha de la cláusula, lanza una excepción
    IF :NEW.cl_date > signdate 
     THEN RAISE baddate;
    END IF;

EXCEPTION
    WHEN baddate THEN  
     RAISE_APPLICATION_ERROR (-20001,'WRONG DATE!'); 
END CHK_clause_date;
/


CREATE OR REPLACE TRIGGER delete_clause
    INSTEAD OF DELETE ON clauses
    FOR EACH ROW
BEGIN 
    UPDATE clauses_ALL
        SET userid = USER,
            dlt_date = SYSDATE
        WHERE referenc=:OLD.referenc AND n_order=:OLD.n_order;
END;



SELECT *
FROM orders_anonym
WHERE orderdate BETWEEN TO_DATE('01/01/23', 'DD/MM/YY') AND TO_DATE('31/12/23', 'DD/MM/YY');